---
description: 
globs: 
alwaysApply: false
---
# 불릿 리스트 플러그인 구현 가이드

## 1. 개요

LiteEditor 불릿 리스트 플러그인은 사용자가 선택한 텍스트에 불릿 리스트를 적용하고 제거할 수 있는 기능을 제공합니다. 사용자는 툴바 버튼이나 단축키(Alt+U)를 통해 기능을 실행할 수 있습니다.

## 2. 핵심 요구사항

### 2.1 필수 기능
- **선택 영역 제한**: 사용자가 선택한 영역에만 불릿 리스트 적용/해제
- **토글 기능**: 불릿 리스트가 적용된 영역 선택 후 버튼 클릭 시 원래 형식으로 돌아가야 함
- **원본 형식 보존**: P 태그로 된 영역은 P로, BR로 된 영역은 BR로 복원
- **하이픈 보존**: 불릿 리스트 해제 시 텍스트 내 하이픈("-") 문자 보존
- **선택 영역 유지**: 작업 후 선택 영역이 유지되어야 함

### 2.2 추가 기능
- **깊이별 스타일**: 들여쓰기 수준에 따라 disc, circle, square 순으로 스타일 변경
- **Tab/Shift+Tab**: 들여쓰기/내어쓰기 지원
- **엔터키 지원**: 새 리스트 아이템 생성

## 3. 기술 스펙

### 3.1 플러그인 등록
```javascript
PluginUtil.registerPlugin('unorderedList', {
  title: 'Bullet List',
  icon: 'format_list_bulleted',
  action: function(contentArea, buttonElement, event) {
    // 구현 코드
  }
});
```

### 3.2 토글 로직
불릿 리스트가 이미 적용된 영역인지 확인:
```javascript
const inBulletList = isSelectionInBulletList(range);
if (inBulletList) {
  // 불릿 리스트 해제
  removeFormattingFromBulletList(contentArea, range);
} else {
  // 불릿 리스트 적용
  applyBulletListFormatting(contentArea);
}
```

### 3.3 선택 영역 관리
마커 기반 접근법 사용:
```javascript
// 마커 삽입
const startMarker = document.createElement('span');
startMarker.id = startId;
// ... 마커 설정 ...

// 선택 영역에서만 처리
const newRange = document.createRange();
newRange.setStartAfter(startMarkerElement);
newRange.setEndBefore(endMarkerElement);
```

### 3.4 BR 형식 보존
```javascript
// 항상 BR 형식 사용 (강제)
const useBrFormat = true;

if (useBrFormat) {
  // BR 형식 사용 - div 하나에 콘텐츠 보존
  const div = document.createElement('div');
  
  listItems.forEach((li, index) => {
    if (index > 0) {
      div.appendChild(document.createElement('br'));
    }
    div.innerHTML += li.innerHTML.replace(/<ul[\s\S]*?<\/ul>/gi, '');
  });
}
```

## 4. 주의사항 및 버그 방지

### 4.1 BR → P 변환 방지
- 불릿 해제 시 BR 형식으로 된 콘텐츠가 P 태그로 변환되지 않도록 하세요.
- `useBrFormat = true`를 사용해 항상 BR 형식을 유지하세요.

### 4.2 선택 영역 복원 문제
- 마커를 사용해 작업 전후 선택 영역을 일관되게 관리하세요.
- 마커 ID는 고유해야 합니다(타임스탬프 사용 추천).

### 4.3 전체 문서 영향 방지
- `contentArea.querySelectorAll('ul')`과 같은 전체 쿼리 대신 선택 영역에 국한된 쿼리를 사용하세요.
- 명시적으로 `newRange.intersectsNode(ul)`로 선택 영역 내 요소만 처리하세요.

### 4.4 하이픈 처리
- 하이픈 제거 코드(`replace(/^\s*-\s+/, '')`)를 포함하지 마세요.
- 원본 HTML을 그대로 보존하되 중첩 UL 태그만 제외하세요.

## 5. 구현 가이드라인

### 5.1 기본 구조
```javascript
(function() {
  // 플러그인 등록
  PluginUtil.registerPlugin('unorderedList', { /* ... */ });
  
  // 불릿 리스트 적용 함수
  function applyBulletListFormatting(contentArea) { /* ... */ }
  
  // 불릿 리스트 제거 함수
  function removeFormattingFromBulletList(contentArea, range) { /* ... */ }
  
  // 불릿 리스트 내부 여부 확인 함수
  function isSelectionInBulletList(range) { /* ... */ }
  
  // 스타일 적용 함수
  function applyStyleToSingleUl(ul) { /* ... */ }
  
  // 단축키 등록
  LiteEditor.registerShortcut('unorderedList', { /* ... */ });
})();
```

### 5.2 테스트 체크리스트
- [ ] 선택 영역에만 불릿 리스트가 적용되는지 확인
- [ ] 불릿 리스트 해제 시 원본 형식(BR 또는 P)이 보존되는지 확인
- [ ] 하이픈 문자가 보존되는지 확인
- [ ] 단축키(Alt+U)가 동작하는지 확인
- [ ] 선택 영역이 작업 후에도 유지되는지 확인
- [ ] Tab/Shift+Tab으로 들여쓰기/내어쓰기가 동작하는지 확인

## 6. 권장 코드 크기
- 핵심 기능만으로는 200-300라인 정도가 적당합니다.
- 불필요한 중복 코드와 미사용 기능을 제거해 최적화하세요.

## 7. 버그 발생 시 디버깅 전략
1. 선택 영역 관련 문제: 마커 삽입/제거 로직과 range 객체 검사
2. 형식 변환 문제: useBrFormat 상태와 처리 분기 검사
3. 스타일 적용 문제: 처리된 UL 목록에 데이터 속성 확인
