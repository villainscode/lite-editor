---
description: 
globs: 
alwaysApply: false
---
# 드롭다운 레이어 클릭 이벤트 버그

## 문제 설명
웹 에디터의 툴바에서 드롭다운 레이어(폰트, 헤딩, 색상 등) 아이콘을 클릭한 후, 다른 아이콘을 클릭할 때 두 번 클릭해야 레이어가 나타나는 버그가 있습니다.

## 현상
1. 하나의 아이콘(예: 폰트 패밀리)을 클릭하여 드롭다운 레이어가 열림
2. 레이어가 열린 상태에서 다른 아이콘(예: 헤딩)을 클릭
3. 첫 번째 레이어는 닫히지만, 두 번째 레이어가 바로 열리지 않음
4. 두 번째 아이콘을 한 번 더 클릭해야 레이어가 열림

## 원인 분석
1. **이벤트 충돌**: 드롭다운 닫기 이벤트와 새 드롭다운 열기 이벤트가 동시에 발생하여 충돌
2. **비일관적인 구현**: `highlight.js`와 `imageUpload.js`는 정상 작동하지만, 다른 플러그인(`fontFamily.js`, `fontColor.js`, `heading.js`)은 문제 발생
3. **이벤트 버블링 처리**: 일부 플러그인에서 이벤트 버블링 처리가 올바르게 되지 않음
4. **전역 상태 관리 부재**: 활성화된 드롭다운 상태를 전역적으로 관리하는 메커니즘이 없음

## 디버깅 로그
```javascript
// 첫 번째 레이어(emphasis) 클릭 후 두 번째 레이어(heading) 클릭 시 로그
[DropdownUtil] 토글 요청 {isOpen: false, buttonClass: 'lite-editor-button', isTogglingFlag: undefined, allowNextOpen: undefined, eventType: 'click'}
[DropdownUtil] 토글 요청 {isOpen: false, buttonClass: 'lite-editor-button lite-editor-heading-button', isTogglingFlag: undefined, allowNextOpen: undefined, eventType: 'click'}
[DropdownUtil] 토글 요청 {isOpen: true, buttonClass: 'lite-editor-button lite-editor-heading-button', isTogglingFlag: undefined, allowNextOpen: undefined, eventType: 'click'}
```

## 해결 방법
1. **전역 상태 관리 도입**:
   - 현재 열린 드롭다운과 활성화된 버튼을 추적하는 전역 상태 객체 생성
   - 새 드롭다운을 열기 전에 모든 드롭다운을 명시적으로 닫음

2. **이벤트 처리 일원화**:
   - 모든 버튼에 일관된 이벤트 핸들러 적용
   - 이벤트 버블링 관리를 위한 공통 로직 구현

3. **이벤트 타이밍 제어**:
   - 이벤트 처리 중 플래그를 사용하여 중복/충돌 이벤트 방지
   - 처리 완료 후 짧은 타임아웃으로 상태 재설정

## 정상 동작 코드 핵심
```javascript
// 핵심 토글 로직
function toggleDropdown(button, dropdown) {
  // 1. 모든 드롭다운 닫기
  closeAllDropdowns();
  
  // 2. 현재 드롭다운 열기
  if (!button.classList.contains('active')) {
    button.classList.add('active');
    dropdown.classList.add('show');
  }
  
  // 3. 이벤트 중지 (버블링 방지)
  e.stopPropagation();
}
```

## 관련 파일
- `plugin-dropdown-util.js`: 드롭다운 공통 유틸리티
- `fontFamily.js`: 폰트 패밀리 드롭다운 (버그 발생)
- `heading.js`: 헤딩 드롭다운 (버그 발생)
- `fontColor.js`: 폰트 색상 드롭다운 (버그 발생)
- `emphasis.js`: 강조 드롭다운 (정상 작동)
- `imageUpload.js`: 이미지 업로드 드롭다운 (정상 작동)


## 근본적인 해결책 
- 현재 구현된 이 코드로도 문제가 해결되지 않는다면, 가장 확실하고 일관된 해결책은 플러그인 시스템 전체를 재설계하는 것입니다. 모든 플러그인 간에:
- 일관된 DOM 구조
- 일관된 CSS 클래스
- 통합된 이벤트 처리 시스템
- 명확한 ID 네이밍 규칙
- 코드베이스 리팩토링: 모든 플러그인 파일을 일관된 구조로 리팩토링
- 단일 드롭다운 시스템: 하나의 통합된 드롭다운 관리 시스템 구현
- 이벤트 위임: 버튼 각각에 이벤트를 추가하는 대신 툴바 레벨에서 이벤트 위임 사용
- 명확한 CSS 분리: 인라인 스타일 대신 일관된 CSS 클래스 사용