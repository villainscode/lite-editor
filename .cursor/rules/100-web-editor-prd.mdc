---
description: 
globs: 
alwaysApply: false
---
---
description: "오픈소스 웹 에디터 기능 요구사항 정의서"
globs: ["**/*.js", "**/*.ts", "**/*.html", "**/*.css"]
alwaysApply: true
---

# 📝 오픈소스 웹 에디터 PRD

## 1. 개요

- 누구나 쉽게 소스 코드에 추가(Add-on)하여 사용할 수 있는 오픈소스 웹 에디터입니다.
- 에디터 영역을 초기화한 후 `contenteditable="true"`로 설정한 `editor-div`에서, 에디터의 기능을 클릭하면 표준 HTML 코드가 생성되어 해당 div 영역에 적용됩니다.
- 모든 개발 코드는 `.rules` 파일의 내용을 기반으로 작성됩니다.

## 2. 주요 기능

### 2.1 텍스트 서식 적용

- 마우스로 드래그하여 선택한 영역 또는 더블 클릭으로 지정한 영역에 대해 에디터 기능을 클릭했을 때 서식이 적용됩니다.
- 각 에디터 기능에는 자체적인 단축키를 지정해야 합니다.
  - 예: "Heading" 기능에서 h1 태그를 선택하면 macOS에서는 Command + 1, Windows에서는 Ctrl + 1 단축키가 적용됩니다.
  - 단축키가 지정되지 않은 경우, 해당 단축키를 `null` 또는 공백으로 설정하여 추후 추가할 수 있도록 해야 합니다.
- 아이콘을 클릭하여 태그가 적용된 상태에서도, 선택된 영역이 그대로 유지되어야 합니다.
- 선택한 영역에 HTML 태그를 적용한 후, 동일한 선택 영역에서 같은 아이콘을 다시 클릭하면 이미 적용된 HTML 태그가 제거되어야 합니다.
  - 예: bold 아이콘을 클릭하면 `<b>텍스트</b>`가 적용되지만, 동일한 영역에서 다시 bold 아이콘을 클릭하면 `<b>` 태그가 제거되어야 합니다.

### 2.2 실행 취소 및 재실행

- "되돌리기" 또는 "롤백" 명령을 실행하면, 현재 수행 중인 작업이 즉시 직전 상태로 복원되어야 합니다.
- 실행 취소 및 재실행(Undo/Redo) 기능은 OS에서 기본 제공하는 Command + Z, Command + Shift + Z와 동일하게 동작해야 합니다.

### 2.3 설정 레이어 기능

- 폰트, 제목(Heading), 색상(Color), 정렬(Align)과 같이 별도의 설정 레이어를 가진 아이콘은, `editor-div`에서 선택한 텍스트 블록에 최종적으로 설정 레이어에서 선택된 HTML 코드가 적용되어야 합니다.

### 2.4 서식 제거

- 서식 제거 아이콘은 선택된 블록에 적용된 HTML 코드를 제거합니다.

## 3. 확장성 및 유지보수

- 모든 에디터 기능 아이콘은 언제든지 추가하거나 삭제할 수 있는 구조를 가져야 합니다.
- 이 에디터는 사용자가 에디터 라이브러리를 다운로드한 후 소스에서 간단히 추가한 뒤 설치할 수 있어야 합니다.
- 프롬프트를 실행할 때, 별도로 언급하지 않는 한 기존 UI 요소를 해치거나, 레이어, 버튼, 기능 등을 임의로 삭제 또는 변경해서는 안 됩니다.
- 새로운 기능을 추가하거나 수정할 때, 기존에 작성된 코드를 먼저 분석해서 영향도를 파악합니다.
- 기능 단위로 CSS, JavaScript, HTML 파일을 작성합니다.
  - 예: 파일별 역할 분리에 따라 `core.css` (기본 구조 정의), 기본 레이아웃 구조 (`lite-editor`, `toolbar`, `content` 등) 기본 컨테이너 스타일, 에디터 영역 기본 서식 (`h1-h3`, `p`, `blockquote` 등)을 정의합니다.
  - `plugins.css` (확장 기능 정의)는 플러그인별 특화 스타일 (드롭다운, 색상 선택기 등), 확장 기능 UI 컴포넌트, 상호작용 요소 (hover, active 상태 등)를 정의합니다.
- 각 아이콘은 아이콘의 역할에 따라 `.js` 파일들을 분리하고 중복되는 소스들은 공통 컴포넌트로 작성한 뒤 제거합니다.
- 각 기능들은 서로 영향을 받지 않도록 작성합니다. 특정 기능을 추가할 경우 다른 소스에 영향을 주면 안 됩니다.

## 4. 개발 원칙

- 재사용성 및 모듈화를 우선 고려합니다.
- 일관된 네이밍 컨벤션을 유지합니다.
- 국제화(i18n) 요구사항을 고려합니다.
- SEO(검색 엔진 최적화)를 최적화합니다.
- 다양한 브라우저 및 기기와의 호환성을 보장합니다.
- 책임과 관심사를 명확히 분리하여 구현합니다.
- 중복 방지: 코드 중복을 피하고, 가능한 기존 기능을 재사용합니다 (DRY 원칙).
- 문서와 주석은 영어로 작성합니다.
- 기술적인 용어나 라이브러리 이름 등은 원문을 유지해도 됩니다.
- 명확하고 일관된 커밋 메시지를 작성합니다.
- 적절한 크기로 커밋을 유지합니다.
- 웹 표준, 반응형 웹을 고려합니다.

## 5. 문서화

- 주요 컴포넌트 개발 후에는 `/docs/[yyyy-mm-dd-component].md`에 간략한 요약을 기록합니다.

## 6. 구현 현황 (JavaScript 파일 및 기능)

현재까지 구현된 주요 JavaScript 파일과 해당 기능은 다음과 같습니다. (파일 이름 및 PRD 기반 추정)

*   **`js/core.js`**:
    *   에디터 초기화 및 기본 설정 
    *   `contenteditable` 영역 관리, 기본 이벤트 처리
    *   플러그인 로딩/관리 인터페이스 
    *   에디터 상태 관리 (선택 영역 추적 등)
*   **`js/loader.js`**:
    *   에디터, 스크립트, 플러그인 로딩 및 초기화 
*   **`js/modal.js`**:
    *   설정 레이어/모달 UI 생성 및 관리 
*   **`js/plugins/history.js`**:
    *   실행 취소/재실행 (Undo/Redo) 기능 
*   **`js/plugins/bold.js`**:
    *   볼드 서식 적용/제거 
*   **`js/plugins/italic.js`**:
    *   이탤릭 서식 적용/제거 
*   **`js/plugins/underline.js`**:
    *   밑줄 서식 적용/제거 
*   **`js/plugins/strike.js`**:
    *   취소선 서식 적용/제거
*   **`js/plugins/heading.js`**:
    *   제목(H1-H6) 서식 적용/제거, 설정 레이어 연동
*   **`js/plugins/list.js`**:
    *   순서 없는/있는 목록 생성 및 관리 
*   **`js/plugins/blockquote.js`**:
    *   인용구 서식 적용/제거 
*   **`js/plugins/code.js`**:
    *   인라인 코드 서식 적용/제거
*   **`js/plugins/codeBlock.js`**:
    *   코드 블록 생성 및 관리 
*   **`js/plugins/align.js`**:
    *   텍스트 정렬 적용, 설정 레이어 연동 
*   **`js/plugins/line.js`**:
    *   수평선 삽입 기능 
*   **`js/plugins/link.js`**:
    *   하이퍼링크 삽입/수정/제거, 설정 레이어 연동 
*   **`js/plugins/imageUpload.js`**:
    *   이미지 업로드 및 삽입 
*   **`js/plugins/table.js`**:
    *   테이블 생성 및 편집 
*   **`js/plugins/fontFamily.js`**:
    *   폰트 종류 변경, 설정 레이어 연동 
*   **`js/plugins/fontColor.js`**:
    *   텍스트 색상 변경, 설정 레이어 연동 
*   **`js/plugins/highlight.js`**:
    *   텍스트 배경색 변경, 설정 레이어 연동 
*   **`js/plugins/reset.js`**:
    *   서식 제거 기능 
*   **`js/plugins/formatIndent.js`**:
    *   들여쓰기/내어쓰기 기능
*   **`js/plugins/format.js`**:
    *   포맷 관련 기본 기능/유틸리티 
*   **`js/plugins/plugin-util.js`**:
    *   플러그인 공통 유틸리티 
    *   텍스트 서식 관련 공통 유틸리티
*   **`js/plugins/format-utils.js`**:
*   **`js/debug-utils.js`**:
    *   개발/디버깅용 유틸리티

**참고:** 단축키 지원은 개별 플러그인 또는 `core.js`에 구현되었을 수 있으며, PRD에 명시되지 않은 기능(수평선, 이미지, 테이블, 들여쓰기 등)도 포함되어 있습니다.


